{ Version 000417. Copyright © Alexey A.Chernobaev, 1996-2000 }
{
  Базовая очередь (интерфейс).
  Перед включением данного файла необходимо определить тип NumberType.

  Generic queue (interface part).
  Type NumberType must be defined before including this file.
}

type
  PQueueRecord = ^TQueueRecord;
  TQueueRecord = record
    Value: NumberType;
    Next: PQueueRecord;
  end;

  TVGenericQueue = class
  protected
    FCount: Integer;
    FHead, FTail: PQueueRecord;
  public
    constructor Create;
    destructor Destroy; override;
    procedure Clear;
    { очищает очередь (т.е. удаляет все элементы) }
    { clears the queue }
    function IsEmpty: Bool;
    { Result:=Count = 0 }
    procedure AddAfter(const X: NumberType);
    { добавляет элемент X в конец очереди }
    { adds the element X after the current tail of the queue }
    procedure InsertBefore(const X: NumberType);
    { вставляет элемент X в начало очереди }
    { inserts the element X before the current head of the queue }
    function Head: NumberType;
    { возвращает значение "головного" элемента очереди }
    { returns the head of the queue }
    function Tail: NumberType;
    { возвращает значение "хвостового" элемента очереди }
    { returns the tail of the queue }
    function DeleteHead: NumberType;
    { удаляет из очереди "головной" элемент и возвращает его значение }
    { deletes the head from the queue and returns it's value }
    property Count: Integer read FCount;
    { возвращает количество элементов в очереди }
    { returns number of elements in the queue }

{ end }
